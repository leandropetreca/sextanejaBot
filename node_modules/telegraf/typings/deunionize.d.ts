export declare type PropOr<T extends object | undefined, P extends string | symbol | number, D> = T extends Partial<Record<P, unknown>> ? T[P] : D;
export declare type UnionKeys<T> = T extends unknown ? keyof T : never;
export declare type Deunionize<T extends object | undefined> = ([undefined] extends [T] ? undefined : never) | {
    [K in UnionKeys<T>]: PropOr<NonNullable<T>, K, undefined>;
};
export declare function deunionize<T extends object | undefined>(t: T): Deunionize<T>;
//# sourceMappingURL=deunionize.d.ts.map